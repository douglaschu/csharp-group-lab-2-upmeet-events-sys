{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction AddEventFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEventFormComponent_div_3_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submitEvent());\n    });\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"label\", 5);\n    i0.ɵɵtext(5, \"Event Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.newEvent.eventName = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.newEvent.eventTime = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"label\", 9);\n    i0.ɵɵtext(11, \"Location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.newEvent.eventLocation = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"label\", 11);\n    i0.ɵɵtext(14, \"Venue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_15_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.newEvent.eventVenue = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"label\", 13);\n    i0.ɵɵtext(17, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.newEvent.eventDescription = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"label\", 15);\n    i0.ɵɵtext(20, \"Admission Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newEvent.price = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"label\", 17);\n    i0.ɵɵtext(23, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.newEvent.price = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"label\", 19);\n    i0.ɵɵtext(26, \"Image Filepath\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_div_3_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.newEvent.eventImage = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"button\", 21);\n    i0.ɵɵtext(29, \"Add\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventTime);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventLocation);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventVenue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventDescription);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.price);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.price);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newEvent.eventImage);\n  }\n}\nexport class AddEventFormComponent {\n  //@Input() events: Event[];\n  constructor() {\n    this.newEvent = {};\n    this.eventCreated = new EventEmitter();\n    this.displayForm = false;\n  }\n  ngOnInit() {}\n  //trying ngForm for form\n  // submitEvent = (submit: NgForm) => {\n  //   this.eventCreated.emit({\n  //     eventName: submit.value.eventName,\n  //     eventDate: submit.value.eventDate,\n  //     eventTime: submit.value.eventTime,\n  //     eventLocation: submit.value.eventLocation,\n  //     eventVenue: submit.value.eventVenue,\n  //     eventDescription: submit.value.eventDescription,\n  //     price: submit.value.price,\n  //     eventImage: submit.value.image,\n  //     eventCategory: submit.value.eventCategory,\n  //     id: submit.value.id,\n  //     //I don't know if this will work with ngForm (identity)\n  //   });\n  //   this.new;\n  // };\n  submitEvent() {\n    this.eventCreated.emit(this.newEvent);\n    this.newEvent = {}; //resets all form fields after submit\n  }\n\n  toggleDisplay() {\n    this.displayForm = !this.displayForm;\n  }\n}\nAddEventFormComponent.ɵfac = function AddEventFormComponent_Factory(t) {\n  return new (t || AddEventFormComponent)();\n};\nAddEventFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEventFormComponent,\n  selectors: [[\"app-add-event-form\"]],\n  outputs: {\n    eventCreated: \"eventCreated\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"createNewEvent\", 3, \"click\"], [4, \"ngIf\"], [1, \"box\"], [1, \"form\", 3, \"ngSubmit\"], [1, \"fields\"], [\"for\", \"eventName\"], [\"type\", \"text\", \"id\", \"eventName\", \"name\", \"EventName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventTime\"], [\"type\", \"datetime-local\", \"id\", \"eventTime\", \"name\", \"EventTime\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventLocation\"], [\"type\", \"text\", \"id\", \"eventLocation\", \"name\", \"Location\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventVenue\"], [\"type\", \"text\", \"id\", \"eventVenue\", \"name\", \"Venue\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventDescription\"], [\"type\", \"text\", \"id\", \"eventDescription\", \"name\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"name\", \"Price\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"category\"], [\"type\", \"text\", \"id\", \"price\", \"name\", \"Price\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventImage\"], [\"type\", \"text\", \"id\", \"eventImage\", \"name\", \"Image\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"createNewEvent\"]],\n  template: function AddEventFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AddEventFormComponent_Template_button_click_1_listener() {\n        return ctx.toggleDisplay();\n      });\n      i0.ɵɵtext(2, \"Create a Pawsitive Event\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, AddEventFormComponent_div_3_Template, 30, 8, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayForm);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.box[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.fields[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    \\r\\n    width: auto;\\r\\n}\\r\\n\\r\\n#eventDescription[_ngcontent-%COMP%] {\\r\\n    height: 5em;\\r\\n}\\r\\n\\r\\n#price[_ngcontent-%COMP%] {\\r\\n    width: 25%\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    border-radius: 10px;\\r\\n    border: none;\\r\\n    padding: 12px 24px;\\r\\n    margin: 20px 0px 10px 0px;\\r\\n    padding: 8px 8px 8px 8px;\\r\\n    font-weight: 600;\\r\\n    color: #ffffff;\\r\\n    background-color: #3b5998;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #1095c1;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nbutton.createNewEvent[_ngcontent-%COMP%] {\\r\\n    width: 60%;\\r\\n}\\r\\n\\r\\nbutton.add[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n    width: 60%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtZXZlbnQtZm9ybS9hZGQtZXZlbnQtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjs7SUFFdEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6Qix3QkFBd0I7SUFDeEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7Ozs7Ozs7Ozs7Ozs7SUFhSTs7QUFFSjs7O09BR087O0FBRVA7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsVUFBVTtBQUNkOztBQUVBOzs7Ozs7O0dBT0ciLCJzb3VyY2VzQ29udGVudCI6WyJib2R5IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmJveCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5maWVsZHMge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG4jZXZlbnREZXNjcmlwdGlvbiB7XHJcbiAgICBoZWlnaHQ6IDVlbTtcclxufVxyXG5cclxuI3ByaWNlIHtcclxuICAgIHdpZHRoOiAyNSVcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDI0cHg7XHJcbiAgICBtYXJnaW46IDIwcHggMHB4IDEwcHggMHB4O1xyXG4gICAgcGFkZGluZzogOHB4IDhweCA4cHggOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNiNTk5ODtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMDk1YzE7XHJcbn1cclxuXHJcbi8qIGJ1dHRvbi5mYWRlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjU5OTg7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgLjhzO1xyXG59XHJcbsOiwoDCi1xyXG5idXR0b24uZmFkZTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTA5NWMxO1xyXG59XHJcbsOiwoDCi1xyXG5idXR0b24uZmFkZTpmb2N1cywgYnV0dG9uLmZhZGU6YWN0aXZlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjU5OTg7XHJcbiAgICB0cmFuc2l0aW9uOiBub25lO1xyXG59ICAqL1xyXG5cclxuLyogYnV0dG9uOmZvY3VzLCBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIGNvbG9yOiAjZmY0YjJiO1xyXG4gICAgfSAqL1xyXG5cclxuYnV0dG9uLmNyZWF0ZU5ld0V2ZW50IHtcclxuICAgIHdpZHRoOiA2MCU7XHJcbn1cclxuXHJcbmJ1dHRvbi5hZGQge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIHdpZHRoOiA2MCU7XHJcbn1cclxuXHJcbi8qIC5ob3Zlcjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIzEwOTVjMSA1MCUsIzNiNTk5OCAwKSBcclxuICAgIHZhcigtLV9wLDEwMCUpLzIwMCUgbm8tcmVwZWF0O1xyXG4gIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiBiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jbGlwOiBiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gIHRyYW5zaXRpb246IC44cztcclxuICAgIC0tX3A6IDAlO1xyXG59ICovIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;;;;;IC+BlEC,2BAA0B;IAEZA;MAAAA;MAAA;MAAA,OAAYA,mCAAa;IAAA,EAAC;IAE5BA,8BAAoB;IACOA,0BAAU;IAAAA,iBAAQ;IACzCA,gCAAqF;IAAlCA;MAAAA;MAAA;MAAA,OAAaA,kDACjF;IAAA,EADoG;IAAnFA,iBAAqF;IAGjFA,gCAAuB;IAAAA,oBAAI;IAAAA,iBAAQ;IACnCA,gCAA+F;IAAlCA;MAAAA;MAAA;MAAA,OAAaA,kDAC/F;IAAA,EADkH;IAA7FA,iBAA+F;IAC/FA,iCAA2B;IAAAA,yBAAQ;IAAAA,iBAAQ;IAC3CA,kCAA4F;IAAtCA;MAAAA;MAAA;MAAA,OAAaA,sDACxF;IAAA,EAD+G;IAA1FA,iBAA4F;IAC5FA,kCAAwB;IAAAA,sBAAK;IAAAA,iBAAQ;IACrCA,kCAAmF;IAAnCA;MAAAA;MAAA;MAAA,OAAaA,mDAClF;IAAA,EADsG;IAAjFA,iBAAmF;IACnFA,kCAA8B;IAAAA,4BAAW;IAAAA,iBAAQ;IACjDA,kCAAoG;IAAxCA;MAAAA;MAAA;MAAA,OAAaA,yDAC7F;IAAA,EADuH;IAAnGA,iBAAoG;IACpGA,kCAAmB;IAAAA,gCAAe;IAAAA,iBAAQ;IAC1CA,kCAA0E;IAA7BA;MAAAA;MAAA;MAAA,OAAaA,8CAC9E;IAAA,EAD6F;IAAzEA,iBAA0E;IAC1EA,kCAAsB;IAAAA,yBAAQ;IAAAA,iBAAQ;IACtCA,kCAAwE;IAA7BA;MAAAA;MAAA;MAAA,OAAaA,8CAE9E;IAAA,EAF6F;IAAvEA,iBAAwE;IAExEA,kCAAwB;IAAAA,+BAAc;IAAAA,iBAAQ;IAC9CA,kCAAkF;IAAlCA;MAAAA;MAAA;MAAA,OAAaA,oDACjF;IAAA,EADqG;IAAjFA,iBAAkF;IAGtFA,mCAA6C;IAAAA,oBAAG;IAAAA,iBAAS;;;;IApBNA,eAAgC;IAAhCA,mDAAgC;IAIlBA,eAAgC;IAAhCA,mDAAgC;IAEvCA,eAAoC;IAApCA,uDAAoC;IAE1CA,eAAiC;IAAjCA,oDAAiC;IAErBA,eAAuC;IAAvCA,0DAAuC;IAEtDA,eAA4B;IAA5BA,+CAA4B;IAE9BA,eAA4B;IAA5BA,+CAA4B;IAGvBA,eAAiC;IAAjCA,oDAAiC;;;AD7CzG,OAAM,MAAOC,qBAAqB;EAGhC;EAEAC;IAJA,aAAQ,GAAU,EAAW;IACnB,iBAAY,GAAG,IAAIH,YAAY,EAAS;IA8BlD,gBAAW,GAAY,KAAK;EA3Bb;EAEfI,QAAQ,IAAU;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,WAAW;IACT,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACrC,IAAI,CAACA,QAAQ,GAAG,EAAW,CAAC;EAC9B;;EAGAC,aAAa;IACX,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;;AAnCWR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAS;EAAAC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCmBlCf,4BAAM;MAE6BA;QAAA,OAASgB,mBAAe;MAAA,EAAC;MAAChB,wCAAwB;MAAAA,iBAAS;MAC1FA,uEA6BU;MAEdA,iBAAO;;;MA/BIA,eAAiB;MAAjBA,sCAAiB","names":["EventEmitter","i0","AddEventFormComponent","constructor","ngOnInit","submitEvent","eventCreated","emit","newEvent","toggleDisplay","displayForm","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\add-event-form\\add-event-form.component.ts","C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\add-event-form\\add-event-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Event } from 'src/app/models/event';\r\n\r\n@Component({\r\n  selector: 'app-add-event-form',\r\n  templateUrl: './add-event-form.component.html',\r\n  styleUrls: ['./add-event-form.component.css'],\r\n})\r\nexport class AddEventFormComponent {\r\n  newEvent: Event = {} as Event;\r\n  @Output() eventCreated = new EventEmitter<Event>();\r\n  //@Input() events: Event[];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  //trying ngForm for form\r\n  // submitEvent = (submit: NgForm) => {\r\n  //   this.eventCreated.emit({\r\n  //     eventName: submit.value.eventName,\r\n  //     eventDate: submit.value.eventDate,\r\n  //     eventTime: submit.value.eventTime,\r\n  //     eventLocation: submit.value.eventLocation,\r\n  //     eventVenue: submit.value.eventVenue,\r\n  //     eventDescription: submit.value.eventDescription,\r\n  //     price: submit.value.price,\r\n  //     eventImage: submit.value.image,\r\n  //     eventCategory: submit.value.eventCategory,\r\n  //     id: submit.value.id,\r\n  //     //I don't know if this will work with ngForm (identity)\r\n  //   });\r\n  //   this.new;\r\n  // };\r\n\r\n  submitEvent() {\r\n    this.eventCreated.emit(this.newEvent);\r\n    this.newEvent = {} as Event;//resets all form fields after submit\r\n  }\r\n\r\n  displayForm: boolean = false;\r\n  toggleDisplay(): void {\r\n    this.displayForm = !this.displayForm;\r\n  }\r\n  //Justin's method without ngForm\r\n}\r\n","<!-- <body>\r\n    <button class=\"Create New Event\" (click)=\"toggleDisplay()\">New Event</button>\r\n    <form (ngSubmit)=\"submitEvent()\" class='form'>\r\n        <div class=\"box\">\r\n            <div class=\"fields\">\r\n                <label for=\"eventName\">Event Name</label>\r\n                <input type=\"text\" id=\"eventName\" name=\"EventName\" [(ngModel)]=\"newEvent.eventName\"/>\r\n                <label for=\"eventDate\">Date</label>\r\n                <input type=\"date\" id=\"eventDate\" name=\"EventDate\" [(ngModel)]=\"newEvent.eventDate\"/> -->\r\n                <!-- <label for=\"eventTime\">Time</label>\r\n                <input type=\"datetime-local\" id=\"eventTime\" name=\"EventTime\" [(ngModel)]=\"newEvent.eventTime\"/>\r\n                <label for=\"eventLocation\">Location</label>\r\n                <input type=\"text\" id=\"eventLocation\" name=\"Location\" [(ngModel)]=\"newEvent.eventLocation\"/>\r\n                <label for=\"eventVenue\">Venue</label>\r\n                <input type=\"text\" id=\"eventVenue\" name=\"Venue\" [(ngModel)]=\"newEvent.eventVenue\"/>\r\n                <label for=\"eventDescription\">Description</label>\r\n                <input type=\"text\" id=\"eventDescription\" name=\"Description\" [(ngModel)]=\"newEvent.eventDescription\">\r\n                <label for=\"price\">Admission Price</label>\r\n                <input type=\"number\" id=\"price\" name=\"Price\" [(ngModel)]=\"newEvent.price\">\r\n                <label for=\"eventImage\">Image Filepath</label>\r\n                <input type=\"text\" id=\"eventImage\" name=\"Image\" [(ngModel)]=\"newEvent.eventImage\">\r\n            </div>\r\n        </div>\r\n        <button type=\"submit\">Add</button>\r\n\r\n    </form>\r\n</body> -->\r\n\r\n<body>\r\n    <!--  *ngIf=\"displayForm\" -->\r\n    <button class=\"createNewEvent\" (click)=\"toggleDisplay()\">Create a Pawsitive Event</button>\r\n    <div  *ngIf=\"displayForm\">\r\n        <div class=\"box\" >\r\n            <form (ngSubmit)=\"submitEvent()\" class='form'>\r\n                \r\n                <div class=\"fields\">\r\n                    <label for=\"eventName\">Event Name</label>\r\n                    <input type=\"text\" id=\"eventName\" name=\"EventName\" [(ngModel)]=\"newEvent.eventName\"/>\r\n                    <!-- <label for=\"eventDate\">Date</label>\r\n                        <input type=\"date\" id=\"eventDate\" name=\"EventDate\" [(ngModel)]=\"newEvent.eventDate\"/> -->\r\n                        <label for=\"eventTime\">Time</label>\r\n                        <input type=\"datetime-local\" id=\"eventTime\" name=\"EventTime\" [(ngModel)]=\"newEvent.eventTime\"/>\r\n                        <label for=\"eventLocation\">Location</label>\r\n                        <input type=\"text\" id=\"eventLocation\" name=\"Location\" [(ngModel)]=\"newEvent.eventLocation\"/>\r\n                        <label for=\"eventVenue\">Venue</label>\r\n                        <input type=\"text\" id=\"eventVenue\" name=\"Venue\" [(ngModel)]=\"newEvent.eventVenue\"/>\r\n                        <label for=\"eventDescription\">Description</label>\r\n                        <input type=\"text\" id=\"eventDescription\" name=\"Description\" [(ngModel)]=\"newEvent.eventDescription\">\r\n                        <label for=\"price\">Admission Price</label>\r\n                        <input type=\"number\" id=\"price\" name=\"Price\" [(ngModel)]=\"newEvent.price\">\r\n                        <label for=\"category\">Category</label>\r\n                        <input type=\"text\" id=\"price\" name=\"Price\" [(ngModel)]=\"newEvent.price\">\r\n\r\n                        <label for=\"eventImage\">Image Filepath</label>\r\n                        <input type=\"text\" id=\"eventImage\" name=\"Image\" [(ngModel)]=\"newEvent.eventImage\">\r\n                    </div>\r\n                    \r\n                    <button class=\"createNewEvent\" type=\"submit\">Add</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n   \r\n</body>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}