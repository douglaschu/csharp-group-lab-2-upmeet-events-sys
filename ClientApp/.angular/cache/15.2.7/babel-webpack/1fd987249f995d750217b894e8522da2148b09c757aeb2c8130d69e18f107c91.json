{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/event.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FavoriteListComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r1.eventName);\n  }\n}\nexport class FavoriteListComponent {\n  constructor(_eventService) {\n    this._eventService = _eventService;\n    this.allFavoritesList = [];\n    this.eventsList = [];\n    this.eventFavorited = false;\n    this.userName = \"\";\n    this.eventFavorited = false;\n    this.userName = \"\";\n  }\n  ngOnInit() {\n    this.callGetAllFavorites();\n  }\n  callGetAllFavorites() {\n    this._eventService.getFavesByUser(this.userName).subscribe(response => {\n      console.log(response);\n      this.eventsList = response;\n    });\n  }\n  callRemoveEventFromFave(event) {\n    let newFave = {};\n    this.eventFavorited = false;\n    newFave.userName = this.userName;\n    // newFave.eventId = event.id; \n    this._eventService.removeEventFromFave(newFave).subscribe(response => {\n      console.log(response);\n      this.allFavoritesList.push(response);\n    });\n  }\n  callRemoveEventFromFave(event) {\n    let newFave = {};\n    this.eventFavorited = false;\n    newFave.userName = this.userName;\n    // newFave.eventId = event.id; \n    this._eventService.removeEventFromFave(newFave).subscribe(response => {\n      console.log(response);\n      this.allFavoritesList.push(response);\n    });\n  }\n}\nFavoriteListComponent.ɵfac = function FavoriteListComponent_Factory(t) {\n  return new (t || FavoriteListComponent)(i0.ɵɵdirectiveInject(i1.EventService));\n};\nFavoriteListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FavoriteListComponent,\n  selectors: [[\"app-favorite-list\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FavoriteListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n      i0.ɵɵelementStart(4, \"title\");\n      i0.ɵɵtext(5, \"Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"link\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"body\")(8, \"p\");\n      i0.ɵɵtext(9, \"What is your name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function FavoriteListComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.userName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function FavoriteListComponent_Template_button_click_11_listener() {\n        return ctx.callGetAllFavorites();\n      });\n      i0.ɵɵtext(12, \"Get Favorites\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"h1\");\n      i0.ɵɵtext(14, \"Favorites\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, FavoriteListComponent_div_15_Template, 3, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.userName);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.eventsList);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAgBAA,2BAAkC;IAC7BA,YAAe;IAAAA,iBAAI;;;;IAAnBA,eAAe;IAAfA,oCAAe;;;ACPpB,OAAM,MAAOC,qBAAqB;EAI9BC,YAAoBC,aAA2B;IAA3B,kBAAa,GAAbA,aAAa;IAH1B,qBAAgB,GAAe,EAAE;IACjC,eAAU,GAAY,EAAE;IAajC,mBAAc,GAAY,KAAK;IAC/B,aAAQ,GAAW,EAAE;IAerB,mBAAc,GAAY,KAAK;IAC/B,aAAQ,GAAW,EAAE;EA5B+B;EAElDC,QAAQ;IACN,IAAI,CAACC,mBAAmB,EAAE;EAC5B;EACAA,mBAAmB;IACjB,IAAI,CAACF,aAAa,CAACG,cAAc,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAEC,QAAiB,IAAI;MAC/EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACG,UAAU,GAAGH,QAAQ;IAC5B,CAAC,CAAC;EACN;EAGAI,uBAAuB,CAACC,KAAY;IAClC,IAAIC,OAAO,GAAa,EAAc;IACtC,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3BD,OAAO,CAACR,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAChC;IACA,IAAI,CAACJ,aAAa,CAACc,mBAAmB,CAACF,OAAO,CAAC,CAACP,SAAS,CAAEC,QAAkB,IAAI;MAC7EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACS,gBAAgB,CAACC,IAAI,CAACV,QAAQ,CAAC;IAC1C,CAAC,CAAC;EAEJ;EAMEI,uBAAuB,CAACC,KAAY;IAClC,IAAIC,OAAO,GAAa,EAAc;IACtC,IAAI,CAACC,cAAc,GAAG,KAAK;IAC3BD,OAAO,CAACR,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAChC;IACA,IAAI,CAACJ,aAAa,CAACc,mBAAmB,CAACF,OAAO,CAAC,CAACP,SAAS,CAAEC,QAAkB,IAAI;MAC7EC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACS,gBAAgB,CAACC,IAAI,CAACV,QAAQ,CAAC;IAC1C,CAAC,CAAC;EAEJ;;AA3CaR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCxB,+BAAgB;MAEZA,0BAAsB;MAEtBA,6BAAO;MAAAA,wBAAQ;MAAAA,iBAAQ;MACvBA,0BAAyG;MAE7GA,iBAAO;MACPA,4BAAM;MACHA,kCAAkB;MAAAA,iBAAI;MACzBA,iCAA0C;MAAvBA;QAAA;MAAA,EAAsB;MAAzCA,iBAA0C;MAC1CA,kCAAwC;MAAhCA;QAAA,OAASyB,yBAAqB;MAAA,EAAC;MAACzB,8BAAa;MAAAA,iBAAS;MAE9DA,2BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAElBA,wEAGM;MAVNA,iBAAM;;;MAEaA,gBAAsB;MAAtBA,sCAAsB;MAKtBA,eAAa;MAAbA,wCAAa","names":["i0","FavoriteListComponent","constructor","_eventService","ngOnInit","callGetAllFavorites","getFavesByUser","userName","subscribe","response","console","log","eventsList","callRemoveEventFromFave","event","newFave","eventFavorited","removeEventFromFave","allFavoritesList","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\favorite-list\\favorite-list.component.html","C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\favorite-list\\favorite-list.component.ts"],"sourcesContent":["<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\n\n</head>\n<body>\n<p>What is your name:</p>\n<input type=\"text\" [(ngModel)]=\"userName\">\n<button (click)=\"callGetAllFavorites()\">Get Favorites</button>\n\n<h1>Favorites</h1>\n\n<div *ngFor=\"let e of eventsList\">\n  <p>{{e.eventName}}</p>\n\n</div>","import { Favorite } from 'src/app/models/favorite';\nimport { Component, OnInit } from '@angular/core';\nimport { EventService } from 'src/app/services/event.service';\nimport { Event } from 'src/app/models/event';\n\n@Component({\n  selector: 'app-favorite-list',\n  templateUrl: './favorite-list.component.html',\n  styleUrls: ['./favorite-list.component.css']\n})\nexport class FavoriteListComponent {\n    public allFavoritesList: Favorite[] = [];\n    public eventsList: Event[] = [];\n  \n    constructor(private _eventService: EventService) {}\n  \n    ngOnInit(): void {\n      this.callGetAllFavorites();\n    }\n    callGetAllFavorites() {\n      this._eventService.getFavesByUser(this.userName).subscribe((response: Event[]) => {\n        console.log(response);\n        this.eventsList = response;\n      });\n  }\n  eventFavorited: boolean = false;\n  userName: string = \"\"; \n  callRemoveEventFromFave(event: Event) {\n    let newFave: Favorite = {} as Favorite;\n    this.eventFavorited = false; \n    newFave.userName = this.userName;\n    // newFave.eventId = event.id; \n    this._eventService.removeEventFromFave(newFave).subscribe((response: Favorite) => {\n        console.log(response);\n        this.allFavoritesList.push(response);\n  });\n\n}\n\n\n\n  eventFavorited: boolean = false;\n  userName: string = \"\"; \n  callRemoveEventFromFave(event: Event) {\n    let newFave: Favorite = {} as Favorite;\n    this.eventFavorited = false; \n    newFave.userName = this.userName;\n    // newFave.eventId = event.id; \n    this._eventService.removeEventFromFave(newFave).subscribe((response: Favorite) => {\n        console.log(response);\n        this.allFavoritesList.push(response);\n  });\n\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}