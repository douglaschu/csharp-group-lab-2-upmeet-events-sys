{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction UserFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function UserFormComponent_div_3_Template_form_ngSubmit_2_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.userLogIn());\n    });\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6)(5, \"label\", 7);\n    i0.ɵɵtext(6, \"Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function UserFormComponent_div_3_Template_input_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.userName = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"button\", 9);\n    i0.ɵɵtext(10, \"Submit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userName);\n  }\n}\nexport class UserFormComponent {\n  constructor(_userService) {\n    this._userService = _userService;\n    this.userName = \"\";\n    this.displayForm = false;\n    this.userLoggedIn = new EventEmitter();\n  }\n  ngOnInit() {}\n  userLogIn() {\n    this.userLoggedIn.emit(this.userName);\n    console.log(this.userName);\n    this.userName = \"\"; //resets the form\n    this.displayForm = false;\n  }\n  toggleDisplay() {\n    this.displayForm = !this.displayForm;\n  }\n}\nUserFormComponent.ɵfac = function UserFormComponent_Factory(t) {\n  return new (t || UserFormComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n};\nUserFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UserFormComponent,\n  selectors: [[\"app-user-form\"]],\n  outputs: {\n    userLoggedIn: \"userLoggedIn\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"login-button\", 3, \"click\"], [\"class\", \"popup-background\", 4, \"ngIf\"], [1, \"popup-background\"], [1, \"popup\"], [1, \"form\", 3, \"ngSubmit\"], [1, \"box\"], [1, \"fields\"], [\"for\", \"userName\"], [\"type\", \"text\", \"id\", \"userName\", \"name\", \"UserName\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UserFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function UserFormComponent_Template_button_click_1_listener() {\n        return ctx.toggleDisplay();\n      });\n      i0.ɵɵtext(2, \"Log In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, UserFormComponent_div_3_Template, 11, 1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.displayForm);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\".popup-background[_ngcontent-%COMP%] {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background: rgba(0, 0, 0, 0.5);\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    z-index: 999;\\r\\n}\\r\\n\\r\\n.popup[_ngcontent-%COMP%] {\\r\\n    background: #fff;\\r\\n    padding: 20px;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\\r\\n    width: 300px;\\r\\n}\\r\\n\\r\\n.close-button[_ngcontent-%COMP%] {\\r\\n    background: #ccc;\\r\\n    border: none;\\r\\n    padding: 5px 10px;\\r\\n    margin-top: 10px;\\r\\n    cursor: pointer;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.close-button[_ngcontent-%COMP%]:hover {\\r\\n    background: #999;\\r\\n}\\r\\n.login-button[_ngcontent-%COMP%] {\\r\\n    border-radius: 10px;\\r\\n    border: none;\\r\\n    margin: 0px;\\r\\n    padding: 8px 8px 8px 8px;\\r\\n    font-weight: 600;\\r\\n    color: #ffffff;\\r\\n    background-color: #3b5998;\\r\\n    \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy91c2VyLWZvcm0vdXNlci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLDhCQUE4QjtJQUM5QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsMkNBQTJDO0lBQzNDLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixXQUFXO0lBQ1gsd0JBQXdCO0lBQ3hCLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2QseUJBQXlCOztBQUU3QiIsInNvdXJjZXNDb250ZW50IjpbIi5wb3B1cC1iYWNrZ3JvdW5kIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICB6LWluZGV4OiA5OTk7XHJcbn1cclxuXHJcbi5wb3B1cCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSk7XHJcbiAgICB3aWR0aDogMzAwcHg7XHJcbn1cclxuXHJcbi5jbG9zZS1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuLmNsb3NlLWJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOTk5O1xyXG59XHJcbi5sb2dpbi1idXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG1hcmdpbjogMHB4O1xyXG4gICAgcGFkZGluZzogOHB4IDhweCA4cHggOHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIGNvbG9yOiAjZmZmZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzNiNTk5ODtcclxuICAgIFxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAoBA,YAAY,QAAgB,eAAe;;;;;;;;ICmB3DC,8BAAkD;IAEpCA;MAAAA;MAAA;MAAA,OAAYA,iCAAW;IAAA,EAAC;IAC1BA,8BAAiB;IAEaA,qBAAK;IAAAA,iBAAQ;IACnCA,gCAAyE;IAAxBA;MAAAA;MAAA;MAAA;IAAA,EAAsB;IAAvEA,iBAAyE;IAGrFA,qBAAI;IACAA,iCAAsB;IAAAA,uBAAM;IAAAA,iBAAS;;;;IAJoBA,eAAsB;IAAtBA,yCAAsB;;;ADhB/F,OAAM,MAAOC,iBAAiB;EAM1BC,YAAoBC,YAAwB;IAAxB,iBAAY,GAAZA,YAAY;IALhC,aAAQ,GAAW,EAAE;IACrB,gBAAW,GAAY,KAAK;IAElB,iBAAY,GAAG,IAAIJ,YAAY,EAAU;EAEJ;EAE/CK,QAAQ,IAAU;EAElBC,SAAS;IACP,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC1B,IAAI,CAACA,QAAQ,GAAG,EAAE,CAAC,CAAC;IACpB,IAAI,CAACG,WAAW,GAAG,KAAK;EAC1B;EAEAC,aAAa;IACX,IAAI,CAACD,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;;AAnBSV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAY;EAAAC;IAAAR;EAAA;EAAAS;EAAAC;EAAAC;EAAAC;IAAA;MCQ9BlB,4BAAM;MAC2BA;QAAA,OAASmB,mBAAe;MAAA,EAAC;MAACnB,sBAAM;MAAAA,iBAAS;MACtEA,mEAcM;MACVA,iBAAO;;;MAf4BA,eAAiB;MAAjBA,sCAAiB","names":["EventEmitter","i0","UserFormComponent","constructor","_userService","ngOnInit","userLogIn","userLoggedIn","emit","userName","console","log","displayForm","toggleDisplay","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\user-form\\user-form.component.ts","C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\user-form\\user-form.component.html"],"sourcesContent":["import { outputAst } from '@angular/compiler';\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { Favorite } from 'src/app/models/favorite';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-user-form',\n  templateUrl: './user-form.component.html',\n  styleUrls: ['./user-form.component.css']\n})\nexport class UserFormComponent {\n    userName: string = \"\";\n    displayForm: boolean = false;\n\n    @Output() userLoggedIn = new EventEmitter<string>();\n \n    constructor(private _userService:UserService) {}\n  \n    ngOnInit(): void {}\n  \n    userLogIn() {\n      this.userLoggedIn.emit(this.userName);\n      console.log(this.userName)\n      this.userName = \"\"; //resets the form\n      this.displayForm = false; \n    }\n  \n    toggleDisplay(): void {\n      this.displayForm = !this.displayForm;\n    }\n  }\n  ","<!-- <body>\n    <button class=\"Create New Event\" (click)=\"toggleDisplay()\">Log In</button>\n    <button class=\"createNewEvent\" (click)=\"toggleDisplay()\">Log In</button>\n    <div  *ngIf=\"displayForm\">\n\n    <form (ngSubmit)=\"userLogIn()\" class='form'>\n        <div class=\"box\">\n            <div class=\"fields\">\n                <label for=\"userName\">Name</label>\n                <input type=\"text\" id=\"userName\" name=\"UserName\" [(ngModel)]=\"userName\"/>\n            </div>\n        </div>\n        <button type=\"submit\">Submit</button>\n\n    </form>\n    </div>\n</body> -->\n\n<body>\n    <button class=\"login-button\" (click)=\"toggleDisplay()\">Log In</button>\n    <div class=\"popup-background\" *ngIf=\"displayForm\">\n        <div class=\"popup\">\n            <form (ngSubmit)=\"userLogIn()\" class='form'>\n                <div class=\"box\">\n                    <div class=\"fields\">\n                        <label for=\"userName\">Name:</label>\n                        <input type=\"text\" id=\"userName\" name=\"UserName\" [(ngModel)]=\"userName\"/>\n                    </div>\n                </div>\n            <br>\n                <button type=\"submit\">Submit</button>\n            </form>\n            <!-- <button class=\"close-button\" (click)=\"toggleDisplay()\">Close</button> -->\n        </div>\n    </div>\n</body>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}