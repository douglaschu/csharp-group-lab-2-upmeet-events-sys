{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddEventFormComponent {\n  //@Input() events: Event[];\n  constructor() {\n    this.newEvent = {};\n    this.eventCreated = new EventEmitter();\n    this.displayForm = false;\n  }\n  ngOnInit() {}\n  //trying ngForm for form\n  // submitEvent = (submit: NgForm) => {\n  //   this.eventCreated.emit({\n  //     eventName: submit.value.eventName,\n  //     eventDate: submit.value.eventDate,\n  //     eventTime: submit.value.eventTime,\n  //     eventLocation: submit.value.eventLocation,\n  //     eventVenue: submit.value.eventVenue,\n  //     eventDescription: submit.value.eventDescription,\n  //     price: submit.value.price,\n  //     eventImage: submit.value.image,\n  //     eventCategory: submit.value.eventCategory,\n  //     id: submit.value.id,\n  //     //I don't know if this will work with ngForm (identity)\n  //   });\n  //   this.new;\n  // };\n  submitEvent() {\n    this.eventCreated.emit(this.newEvent);\n    this.newEvent = {};\n    //resets all form fields after submit\n  }\n\n  toggleDisplay() {\n    this.displayForm = !this.displayForm;\n  }\n}\nAddEventFormComponent.ɵfac = function AddEventFormComponent_Factory(t) {\n  return new (t || AddEventFormComponent)();\n};\nAddEventFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEventFormComponent,\n  selectors: [[\"app-add-event-form\"]],\n  outputs: {\n    eventCreated: \"eventCreated\"\n  },\n  decls: 29,\n  vars: 7,\n  consts: [[1, \"box\"], [1, \"form\", 3, \"ngSubmit\"], [1, \"createNewEvent\", \"fade\", 3, \"click\"], [1, \"fields\"], [\"for\", \"eventName\"], [\"type\", \"text\", \"id\", \"eventName\", \"name\", \"EventName\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventTime\"], [\"type\", \"datetime-local\", \"id\", \"eventTime\", \"name\", \"EventTime\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventLocation\"], [\"type\", \"text\", \"id\", \"eventLocation\", \"name\", \"Location\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventVenue\"], [\"type\", \"text\", \"id\", \"eventVenue\", \"name\", \"Venue\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventDescription\"], [\"type\", \"text\", \"id\", \"eventDescription\", \"name\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"price\"], [\"type\", \"number\", \"id\", \"price\", \"name\", \"Price\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"eventImage\"], [\"type\", \"text\", \"id\", \"eventImage\", \"name\", \"Image\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"add\", \"fade\"]],\n  template: function AddEventFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddEventFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.submitEvent();\n      });\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddEventFormComponent_Template_button_click_3_listener() {\n        return ctx.toggleDisplay();\n      });\n      i0.ɵɵtext(4, \"New Event\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Event Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.newEvent.eventName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Time\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.newEvent.eventTime = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Location\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.newEvent.eventLocation = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Venue\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.newEvent.eventVenue = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 12);\n      i0.ɵɵtext(19, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.newEvent.eventDescription = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"label\", 14);\n      i0.ɵɵtext(22, \"Admission Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.newEvent.price = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\", 16);\n      i0.ɵɵtext(25, \"Image Filepath\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 17);\n      i0.ɵɵlistener(\"ngModelChange\", function AddEventFormComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.newEvent.eventImage = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 18);\n      i0.ɵɵtext(28, \"Add\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventName);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventTime);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventLocation);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventVenue);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventDescription);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.price);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.newEvent.eventImage);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.box[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.fields[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    \\r\\n    width: auto;\\r\\n}\\r\\n\\r\\n#eventDescription[_ngcontent-%COMP%] {\\r\\n    height: 5em;\\r\\n}\\r\\n\\r\\n#price[_ngcontent-%COMP%] {\\r\\n    width: 25%\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n    border-radius: 10px;\\r\\n    border: none;\\r\\n    padding: 12px 24px;\\r\\n    margin: 20px 0px 10px 0px;\\r\\n    padding: 8px 8px 8px 8px;\\r\\n    font-weight: 600;\\r\\n    color: #ffffff;\\r\\n    background-color: #3b5998;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #1095c1;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nbutton.createNewEvent[_ngcontent-%COMP%] {\\r\\n    width: 60%;\\r\\n}\\r\\n\\u200B\\r\\nbutton.add[_ngcontent-%COMP%] {\\r\\n    margin-top: 10px;\\r\\n    width: 60%;\\r\\n    background-color: ;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZGQtZXZlbnQtZm9ybS9hZGQtZXZlbnQtZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHNCQUFzQjs7SUFFdEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6Qix3QkFBd0I7SUFDeEIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7Ozs7Ozs7Ozs7Ozs7SUFhSTs7QUFFSjs7O09BR087O0FBRVA7SUFDSSxVQUFVO0FBQ2Q7QUFDQTs7SUFFSSxnQkFBZ0I7SUFDaEIsVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7QUFFQTs7Ozs7OztHQU9HIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5ib3gge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uZmllbGRzIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgXHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG5cclxuI2V2ZW50RGVzY3JpcHRpb24ge1xyXG4gICAgaGVpZ2h0OiA1ZW07XHJcbn1cclxuXHJcbiNwcmljZSB7XHJcbiAgICB3aWR0aDogMjUlXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgcGFkZGluZzogMTJweCAyNHB4O1xyXG4gICAgbWFyZ2luOiAyMHB4IDBweCAxMHB4IDBweDtcclxuICAgIHBhZGRpbmc6IDhweCA4cHggOHB4IDhweDtcclxuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICBjb2xvcjogI2ZmZmZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjU5OTg7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTA5NWMxO1xyXG59XHJcblxyXG4vKiBidXR0b24uZmFkZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2I1OTk4O1xyXG4gICAgY29sb3I6ICNmZmZmZmY7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC44cztcclxufVxyXG7DosKAwotcclxuYnV0dG9uLmZhZGU6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEwOTVjMTtcclxufVxyXG7DosKAwotcclxuYnV0dG9uLmZhZGU6Zm9jdXMsIGJ1dHRvbi5mYWRlOmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2I1OTk4O1xyXG4gICAgdHJhbnNpdGlvbjogbm9uZTtcclxufSAgKi9cclxuXHJcbi8qIGJ1dHRvbjpmb2N1cywgYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICBjb2xvcjogI2ZmNGIyYjtcclxuICAgIH0gKi9cclxuXHJcbmJ1dHRvbi5jcmVhdGVOZXdFdmVudCB7XHJcbiAgICB3aWR0aDogNjAlO1xyXG59XHJcbsOiwoDCi1xyXG5idXR0b24uYWRkIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB3aWR0aDogNjAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogO1xyXG59XHJcblxyXG4vKiAuaG92ZXI6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCMxMDk1YzEgNTAlLCMzYjU5OTggMCkgXHJcbiAgICB2YXIoLS1fcCwxMDAlKS8yMDAlIG5vLXJlcGVhdDtcclxuICAtd2Via2l0LWJhY2tncm91bmQtY2xpcDogYmFja2dyb3VuZC1jb2xvcjtcclxuICAgICAgICAgIGJhY2tncm91bmQtY2xpcDogYmFja2dyb3VuZC1jb2xvcjtcclxuICB0cmFuc2l0aW9uOiAuOHM7XHJcbiAgICAtLV9wOiAwJTtcclxufSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;;;AAStE,OAAM,MAAOC,qBAAqB;EAGhC;EAEAC;IAJA,aAAQ,GAAU,EAAW;IACnB,iBAAY,GAAG,IAAIF,YAAY,EAAS;IAgClD,gBAAW,GAAY,KAAK;EA7Bb;EAEfG,QAAQ,IAAU;EAElB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,WAAW;IACT,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IACrC,IAAI,CAACA,QAAQ,GAAG,EAAW;IAE3B;EACF;;EAGAC,aAAa;IACX,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;;AArCWR,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAS;EAAAC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCmBlCC,4BAAM;MAEIA;QAAA,OAAYC,iBAAa;MAAA,EAAC;MAE5BD,iCAA8D;MAA1BA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAACD,yBAAS;MAAAA,iBAAS;MAC5EA,8BAAoB;MACOA,0BAAU;MAAAA,iBAAQ;MACzCA,gCAAqF;MAAlCA;QAAA;MAAA,EAAgC;MAAnFA,iBAAqF;MAGrFA,gCAAuB;MAAAA,qBAAI;MAAAA,iBAAQ;MACnCA,iCAA+F;MAAlCA;QAAA;MAAA,EAAgC;MAA7FA,iBAA+F;MAC/FA,iCAA2B;MAAAA,yBAAQ;MAAAA,iBAAQ;MAC3CA,iCAA4F;MAAtCA;QAAA;MAAA,EAAoC;MAA1FA,iBAA4F;MAC5FA,kCAAwB;MAAAA,sBAAK;MAAAA,iBAAQ;MACrCA,kCAAmF;MAAnCA;QAAA;MAAA,EAAiC;MAAjFA,iBAAmF;MACnFA,kCAA8B;MAAAA,4BAAW;MAAAA,iBAAQ;MACjDA,kCAAoG;MAAxCA;QAAA;MAAA,EAAuC;MAAnGA,iBAAoG;MACpGA,kCAAmB;MAAAA,gCAAe;MAAAA,iBAAQ;MAC1CA,kCAA0E;MAA7BA;QAAA;MAAA,EAA4B;MAAzEA,iBAA0E;MAC1EA,kCAAwB;MAAAA,+BAAc;MAAAA,iBAAQ;MAC9CA,kCAAkF;MAAlCA;QAAA;MAAA,EAAiC;MAAjFA,iBAAkF;MAG1FA,mCAAuC;MAAAA,oBAAG;MAAAA,iBAAS;;;MAjBQA,eAAgC;MAAhCA,gDAAgC;MAItBA,eAAgC;MAAhCA,gDAAgC;MAEvCA,eAAoC;MAApCA,oDAAoC;MAE1CA,eAAiC;MAAjCA,iDAAiC;MAErBA,eAAuC;MAAvCA,uDAAuC;MAEtDA,eAA4B;MAA5BA,4CAA4B;MAEzBA,eAAiC;MAAjCA,iDAAiC","names":["EventEmitter","AddEventFormComponent","constructor","ngOnInit","submitEvent","eventCreated","emit","newEvent","toggleDisplay","displayForm","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\add-event-form\\add-event-form.component.ts","C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\components\\add-event-form\\add-event-form.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Event } from 'src/app/models/event';\r\n\r\n@Component({\r\n  selector: 'app-add-event-form',\r\n  templateUrl: './add-event-form.component.html',\r\n  styleUrls: ['./add-event-form.component.css'],\r\n})\r\nexport class AddEventFormComponent {\r\n  newEvent: Event = {} as Event;\r\n  @Output() eventCreated = new EventEmitter<Event>();\r\n  //@Input() events: Event[];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  //trying ngForm for form\r\n  // submitEvent = (submit: NgForm) => {\r\n  //   this.eventCreated.emit({\r\n  //     eventName: submit.value.eventName,\r\n  //     eventDate: submit.value.eventDate,\r\n  //     eventTime: submit.value.eventTime,\r\n  //     eventLocation: submit.value.eventLocation,\r\n  //     eventVenue: submit.value.eventVenue,\r\n  //     eventDescription: submit.value.eventDescription,\r\n  //     price: submit.value.price,\r\n  //     eventImage: submit.value.image,\r\n  //     eventCategory: submit.value.eventCategory,\r\n  //     id: submit.value.id,\r\n  //     //I don't know if this will work with ngForm (identity)\r\n  //   });\r\n  //   this.new;\r\n  // };\r\n\r\n  submitEvent() {\r\n    this.eventCreated.emit(this.newEvent);\r\n    this.newEvent = {} as Event;\r\n\r\n    //resets all form fields after submit\r\n  }\r\n\r\n  displayForm: boolean = false;\r\n  toggleDisplay(): void {\r\n    this.displayForm = !this.displayForm;\r\n  }\r\n  //Justin's method without ngForm\r\n}\r\n","<!-- <body>\r\n    <button class=\"Create New Event\" (click)=\"toggleDisplay()\">New Event</button>\r\n    <form (ngSubmit)=\"submitEvent()\" class='form'>\r\n        <div class=\"box\">\r\n            <div class=\"fields\">\r\n                <label for=\"eventName\">Event Name</label>\r\n                <input type=\"text\" id=\"eventName\" name=\"EventName\" [(ngModel)]=\"newEvent.eventName\"/>\r\n                <label for=\"eventDate\">Date</label>\r\n                <input type=\"date\" id=\"eventDate\" name=\"EventDate\" [(ngModel)]=\"newEvent.eventDate\"/> -->\r\n                <!-- <label for=\"eventTime\">Time</label>\r\n                <input type=\"datetime-local\" id=\"eventTime\" name=\"EventTime\" [(ngModel)]=\"newEvent.eventTime\"/>\r\n                <label for=\"eventLocation\">Location</label>\r\n                <input type=\"text\" id=\"eventLocation\" name=\"Location\" [(ngModel)]=\"newEvent.eventLocation\"/>\r\n                <label for=\"eventVenue\">Venue</label>\r\n                <input type=\"text\" id=\"eventVenue\" name=\"Venue\" [(ngModel)]=\"newEvent.eventVenue\"/>\r\n                <label for=\"eventDescription\">Description</label>\r\n                <input type=\"text\" id=\"eventDescription\" name=\"Description\" [(ngModel)]=\"newEvent.eventDescription\">\r\n                <label for=\"price\">Admission Price</label>\r\n                <input type=\"number\" id=\"price\" name=\"Price\" [(ngModel)]=\"newEvent.price\">\r\n                <label for=\"eventImage\">Image Filepath</label>\r\n                <input type=\"text\" id=\"eventImage\" name=\"Image\" [(ngModel)]=\"newEvent.eventImage\">\r\n            </div>\r\n        </div>\r\n        <button type=\"submit\">Add</button>\r\n\r\n    </form>\r\n</body> -->\r\n\r\n<body>\r\n    <div class=\"box\">\r\n    <form (ngSubmit)=\"submitEvent()\" class='form'>\r\n       \r\n        <button class=\"createNewEvent fade\" (click)=\"toggleDisplay()\">New Event</button>\r\n            <div class=\"fields\">\r\n                <label for=\"eventName\">Event Name</label>\r\n                <input type=\"text\" id=\"eventName\" name=\"EventName\" [(ngModel)]=\"newEvent.eventName\"/>\r\n                <!-- <label for=\"eventDate\">Date</label>\r\n                <input type=\"date\" id=\"eventDate\" name=\"EventDate\" [(ngModel)]=\"newEvent.eventDate\"/> -->\r\n                <label for=\"eventTime\">Time</label>\r\n                <input type=\"datetime-local\" id=\"eventTime\" name=\"EventTime\" [(ngModel)]=\"newEvent.eventTime\"/>\r\n                <label for=\"eventLocation\">Location</label>\r\n                <input type=\"text\" id=\"eventLocation\" name=\"Location\" [(ngModel)]=\"newEvent.eventLocation\"/>\r\n                <label for=\"eventVenue\">Venue</label>\r\n                <input type=\"text\" id=\"eventVenue\" name=\"Venue\" [(ngModel)]=\"newEvent.eventVenue\"/>\r\n                <label for=\"eventDescription\">Description</label>\r\n                <input type=\"text\" id=\"eventDescription\" name=\"Description\" [(ngModel)]=\"newEvent.eventDescription\">\r\n                <label for=\"price\">Admission Price</label>\r\n                <input type=\"number\" id=\"price\" name=\"Price\" [(ngModel)]=\"newEvent.price\">\r\n                <label for=\"eventImage\">Image Filepath</label>\r\n                <input type=\"text\" id=\"eventImage\" name=\"Image\" [(ngModel)]=\"newEvent.eventImage\">\r\n            </div>\r\n        \r\n        <button class=\"add fade\" type=\"submit\">Add</button>\r\n    </form>\r\n</div>\r\n   \r\n</body>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}