{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.eventFavorited = addEventToFave(addFave, Favorite);\n  }\n  getAllEvents() {\n    return this.http.get(`${this.baseUrl}api/Events`);\n  }\n  getAllFavorites() {\n    return this.http.get(`${this.baseUrl}api/Events/Favorites`);\n  }\n  getEventById(id) {\n    return this.http.get(`${this.baseUrl}api/Events/${id}`);\n  }\n  getEventsByCategory(Category) {\n    return this.http.get(`${this.baseUrl}api/Events/Category?=${Category}`);\n  }\n  addNewEvent(newEvent) {\n    return this.http.post(`${this.baseUrl}api/Events`, newEvent);\n  }\n  Observable() {\n    return this.http.post(`${this.baseUrl}api/Events/Favorites`, addFave);\n  }\n  updateEvent(updateEvent) {\n    return this.http.put(`${this.baseUrl}api/Events/${updateEvent.id}`, updateEvent);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.baseUrl}api/Events/${id}`);\n  }\n  removeFavorite(favoriteId) {\n    return this.http.delete(`${this.baseUrl}api/Events/Favorite/${favoriteId}`);\n  }\n}\nEventService.ɵfac = function EventService_Factory(t) {\n  return new (t || EventService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nEventService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventService,\n  factory: EventService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,YAAY;EAIvBC,YAAoBC,IAAe,EAA8BC,OAAe;IAA5D,SAAI,GAAJD,IAAI;IAAyC,YAAO,GAAPC,OAAO;IAqB1E,mBAAc,GACZC,cAAc,CAACC,OAAO,EAACC,QAAQ,CAAC;EAtBoD;EAEpFC,YAAY;IACV,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,YAAY,CAAC;EAC5D;EAEAM,eAAe;IACb,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAa,GAAG,IAAI,CAACL,OAAO,sBAAsB,CAAC;EACzE;EAEAO,YAAY,CAACC,EAAU;IACrB,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,OAAO,cAAcQ,EAAE,EAAE,CAAC;EAChE;EAEAC,mBAAmB,CAACC,QAAc;IAChC,OAAO,IAAI,CAACX,IAAI,CAACM,GAAG,CAAQ,GAAG,IAAI,CAACL,OAAO,wBAAwBU,QAAQ,EAAE,CAAC;EAChF;EAEAC,WAAW,CAACC,QAAc;IACxB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAQ,GAAG,IAAI,CAACb,OAAO,YAAY,EAAEY,QAAQ,CAAC;EACrE;EAEkCE,UAAU;IAC1C,OAAO,IAAI,CAACf,IAAI,CAACc,IAAI,CAAW,GAAG,IAAI,CAACb,OAAO,sBAAsB,EAAEE,OAAO,CAAC;EACjF;EACAa,WAAW,CAACA,WAAiB;IAC3B,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAQ,GAAG,IAAI,CAAChB,OAAO,cAAce,WAAW,CAACP,EAAE,EAAE,EAAEO,WAAW,CAAC;EACzF;EAEAE,WAAW,CAACT,EAAU;IACpB,OAAO,IAAI,CAACT,IAAI,CAACmB,MAAM,CAAQ,GAAG,IAAI,CAAClB,OAAO,cAAcQ,EAAE,EAAE,CAAC;EACnE;EAEAW,cAAc,CAACC,UAAkB;IAC/B,OAAO,IAAI,CAACrB,IAAI,CAACmB,MAAM,CAAW,GAAG,IAAI,CAAClB,OAAO,uBAAuBoB,UAAU,EAAE,CAAC;EACvF;;AAvCWvB,YAAY;mBAAZA,YAAY,0CAIsB,UAAU;AAAA;AAJ5CA,YAAY;SAAZA,YAAY;EAAAwB,SAAZxB,YAAY;EAAAyB,YAFX;AAAM","names":["EventService","constructor","http","baseUrl","addEventToFave","addFave","Favorite","getAllEvents","get","getAllFavorites","getEventById","id","getEventsByCategory","Category","addNewEvent","newEvent","post","Observable","updateEvent","put","deleteEvent","delete","removeFavorite","favoriteId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\maria\\source\\repos\\UpMeet Group Project\\csharp-group-lab-2-upmeet-events-sys\\ClientApp\\src\\app\\services\\event.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable, ObservedValueOf } from 'rxjs';\r\nimport { Favorite } from '../models/favorite';\r\nimport { Event } from '../models/event';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  \r\n\r\n  constructor(private http:HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\r\n\r\n  getAllEvents(): Observable<Event[]>{\r\n    return this.http.get<Event[]>(`${this.baseUrl}api/Events`);\r\n  }\r\n\r\n  getAllFavorites(): Observable<Favorite[]>{\r\n    return this.http.get<Favorite[]>(`${this.baseUrl}api/Events/Favorites`);\r\n  }\r\n\r\n  getEventById(id: number){\r\n    return this.http.get<Event>(`${this.baseUrl}api/Events/${id}`);\r\n  }\r\n\r\n  getEventsByCategory(Category:Event): Observable<Event> {\r\n    return this.http.get<Event>(`${this.baseUrl}api/Events/Category?=${Category}`);\r\n  }\r\n\r\n  addNewEvent(newEvent:Event): Observable<Event>{\r\n    return this.http.post<Event>(`${this.baseUrl}api/Events`, newEvent); \r\n  }\r\neventFavorited: boolean=\r\n  addEventToFave(addFave:Favorite): Observable<Favorite>{\r\n    return this.http.post<Favorite>(`${this.baseUrl}api/Events/Favorites`, addFave); \r\n  }\r\n  updateEvent(updateEvent:Event): Observable<Event>{\r\n    return this.http.put<Event>(`${this.baseUrl}api/Events/${updateEvent.id}`, updateEvent);\r\n  }\r\n\r\n  deleteEvent(id: number): Observable<Event>{\r\n    return this.http.delete<Event>(`${this.baseUrl}api/Events/${id}`);\r\n  }\r\n\r\n  removeFavorite(favoriteId: number): Observable<Favorite>{\r\n    return this.http.delete<Favorite>(`${this.baseUrl}api/Events/Favorite/${favoriteId}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}